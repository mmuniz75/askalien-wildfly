<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
   xmlns:ui="http://java.sun.com/jsf/facelets"
   xmlns:h="http://java.sun.com/jsf/html"
   xmlns:f="http://java.sun.com/jsf/core"
   >

<body>
	<ui:composition template="../template/template.xhtml">
		<ui:define name="menu">
		</ui:define>
		
		<ui:define name="content">
	
			<h2>Search Syntax</h2>
			
			<div id="content">

<div id="minitoc-area">
<ul class="minitoc">
<li>
<a href="#Terms">Terms</a>
</li>
<li>
<a href="#Term%20Modifiers">Term Modifiers</a>
<ul class="minitoc">
<li>
<a href="#Wildcard%20Searches">Wildcard Searches</a>
</li>
<li>
<a href="#Fuzzy%20Searches">Fuzzy Searches</a>
</li>
<li>
<a href="#Proximity%20Searches">Proximity Searches</a>
</li>
<li>
<a href="#Range%20Searches">Range Searches</a>
</li>
<li>
<a href="#Boosting%20a%20Term">Boosting a Term</a>
</li>
</ul>
</li>
<li>
<a href="#Boolean%20operators">Boolean Operators</a>
<ul class="minitoc">
<li>
<a href="#OR">OR</a>
</li>
<li>
<a href="#AND">AND</a>
</li>
<li>
<a href="#+">+</a>
</li>
<li>
<a href="#NOT">NOT</a>
</li>
<li>
<a href="#-">-</a>
</li>
</ul>
</li>
<li>
<a href="#Grouping">Grouping</a>
</li>
<li>
<a href="#Escaping%20Special%20Characters">Escaping Special Characters</a>
</li>
</ul>
</div>
<br/>
        
<a name="N10032"></a><a name="Terms"></a>
<h2 class="boxed">Terms</h2>
<div class="section">
<p>A query is broken up into terms and operators. There are two types of terms: Single Terms and Phrases.</p>
<p>A Single Term is a single word such as "test" or "hello".</p>
<p>A Phrase is a group of words surrounded by double quotes such as "hello dolly".</p>
<p>Multiple terms can be combined together with Boolean operators to form a more complex query (see below).</p>
<p>Note: The analyzer used to create the index will be used on the terms and phrases in the query string.
        So it is important to choose an analyzer that will not interfere with the terms used in the query string.</p>
</div>

        

        
<a name="N1006D"></a><a name="Term Modifiers"></a>
<h2 class="boxed">Term Modifiers</h2>
<div class="section">
<p>The Search Textbox supports modifying query terms to provide a wide range of searching options.</p>
<a name="N10076"></a><a name="Wildcard Searches"></a>
<h3 class="boxed">Wildcard Searches</h3>
<p>The Search Textbox supports multiple character wildcard searches within single terms
        (not within phrase queries).</p>
<p>To perform a multiple character wildcard search use the "*" symbol.</p>
<p>Multiple character wildcard searches looks for 0 or more characters. 
For example, to search for test, tests or tester, you can use the 
search: </p>
<pre class="code">test*</pre>
<p>You can also use the wildcard searches in the middle of a term.</p>
<pre class="code">te*t</pre>
<p>Note: You cannot use a * symbol as the first character of a search.</p>
<a name="N1009B"></a><a name="Fuzzy Searches"></a>
<h3 class="boxed">Fuzzy Searches</h3>
<p>The Search Textbox supports fuzzy searches based on the Levenshtein Distance, or 
Edit Distance algorithm. To do a fuzzy search use the tilde, "~", symbol
 at the end of a Single word Term. For example to search for a term 
similar in spelling to "roam" use the fuzzy search: </p>
<pre class="code">roam~</pre>
<p>This search will find terms like foam and roams.</p>
<p>Starting with The Search Textbox 1.9 an additional (optional) parameter can 
specify the required similarity. The value is between 0 and 1, with a 
value closer to 1 only terms with a higher similarity will be matched. 
For example:</p>
<pre class="code">roam~0.8</pre>
<p>The default that is used if the parameter is not given is 0.5.</p>
<a name="N100B4"></a><a name="Proximity Searches"></a>
<h3 class="boxed">Proximity Searches</h3>
<p>The Search Textbox supports finding words are a within a specific distance away. 
To do a proximity search use the tilde, "~", symbol at the end of a 
Phrase. For example to search for a "starship" and "alien" within 10 
words of each other in a document use the search: </p>
<pre class="code">"alien starship"~10</pre>
<a name="N100C1"></a><a name="Range Searches"></a>
<h3 class="boxed">Range Searches</h3>
<p>Range Queries allow one to match documents whose field(s) values
            are between the lower and upper bound specified by the Range Query.
            Range Queries can be inclusive or exclusive of the upper and lower bounds.
            Sorting is done lexicographically.</p>
<pre class="code">mod_date:[20020101 TO 20030101]</pre>
<p>This will find documents whose mod_date fields have values between 20020101 and 20030101, inclusive.</p>
<p>Inclusive range queries are denoted by square brackets.  Exclusive range queries are denoted by
            curly brackets.</p>
<a name="N100DA"></a><a name="Boosting a Term"></a>
<h3 class="boxed">Boosting a Term</h3>
<p>The Search Textbox provides the relevance level of matching documents based on 
the terms found. To boost a term use the caret, "^", symbol with a boost
 factor (a number) at the end of the term you are searching. The higher 
the boost factor, the more relevant the term will be.</p>
<p>Boosting allows you to control the relevance of a document by boosting its term. For example, if you are searching for</p>
<pre class="code">alien starship</pre>
<p>and you want the term "alien" to be more relevant boost it using the ^ symbol along with the boost factor next to the term.
        You would type:</p>
<pre class="code">alien^4 starship</pre>
<p>This will make documents with the term alien appear more relevant. You can also boost Phrase Terms as in the example: </p>
<pre class="code">"alien starship"^4 "starship The Search Textbox"</pre>
<p>By default, the boost factor is 1. Although the boost factor must be positive, it can be less than 1 (e.g. 0.2)</p>
</div>


        
<a name="N100FA"></a><a name="Boolean operators"></a>
<h2 class="boxed">Boolean Operators</h2>
<div class="section">
<p>Boolean operators allow terms to be combined through logic operators.
        The Search Textbox supports AND, "+", OR, NOT and "-" as Boolean operators(Note: Boolean operators must be ALL CAPS).</p>
<a name="N10103"></a><a name="OR"></a>
<h3 class="boxed">OR</h3>
<p>The OR operator is the default conjunction operator. This means that 
if there is no Boolean operator between two terms, the OR operator is 
used.
        The OR operator links two terms and finds a matching document if
 either of the terms exist in a document. This is equivalent to a union 
using sets.
        The symbol || can be used in place of the word OR.</p>
<p>To search for documents that contain either "alien starship" or just "alien" use the query:</p>
<pre class="code">"alien starship" alien</pre>
<p>or</p>
<pre class="code">"alien starship" OR alien</pre>
<a name="N10116"></a><a name="AND"></a>
<h3 class="boxed">AND</h3>
<p>The AND operator matches documents where both terms exist anywhere in the text of a single document.
        This is equivalent to an intersection using sets. The symbol &amp;&amp; can be used in place of the word AND.</p>
<p>To search for documents that contain "alien starship" and "starship The Search Textbox" use the query: </p>
<pre class="code">"alien starship" AND "starship The Search Textbox"</pre>
<a name="N10126"></a><a name="+"></a>
<h3 class="boxed">+</h3>
<p>The "+" or required operator requires that the term after the "+" symbol exist somewhere in a the field of a single document.</p>
<p>To search for documents that must contain "alien" and may contain "The Search Textbox" use the query:</p>
<pre class="code">+alien The Search Textbox</pre>
<a name="N10136"></a><a name="NOT"></a>
<h3 class="boxed">NOT</h3>
<p>The NOT operator excludes documents that contain the term after NOT.
        This is equivalent to a difference using sets. The symbol ! can be used in place of the word NOT.</p>
<p>To search for documents that contain "alien starship" but not "starship The Search Textbox" use the query: </p>
<pre class="code">"alien starship" NOT "starship The Search Textbox"</pre>
<p>Note: The NOT operator cannot be used with just one term. For example, the following search will return no results:</p>
<pre class="code">NOT "alien starship"</pre>
<a name="N1014C"></a><a name="-"></a>
<h3 class="boxed">-</h3>
<p>The "-" or prohibit operator excludes documents that contain the term after the "-" symbol.</p>
<p>To search for documents that contain "alien starship" but not "starship The Search Textbox" use the query: </p>
<pre class="code">"alien starship" -"starship The Search Textbox"</pre>
</div>

        
<a name="N1015D"></a><a name="Grouping"></a>
<h2 class="boxed">Grouping</h2>
<div class="section">
<p>The Search Textbox supports using parentheses to group clauses to form sub 
queries. This can be very useful if you want to control the boolean 
logic for a query.</p>
<p>To search for either "alien" or "starship" and "website" use the query:</p>
<pre class="code">(alien OR starship) AND website</pre>
<p>This eliminates any confusion and makes sure you that website must exist and either term alien or starship may exist.</p>
</div>

        
        
<a name="N10180"></a><a name="Escaping Special Characters"></a>
<h2 class="boxed">Escaping Special Characters</h2>
<div class="section">
<p>The Search Textbox supports escaping special characters that are part of the query syntax. The current list special characters are</p>
<p>+ - &amp;&amp; || ! ( ) { } [ ] ^ " ~ * : \</p>
<p>To escape these character use the \ before the character. For example to search for (1+1):2 use the query:</p>
<pre class="code">\(1\+1\)\:2</pre>
</div>
 
</div>
			

		</ui:define>
	</ui:composition>	
</body>
</html>